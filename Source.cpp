#include <iostream>
#include "Extention.h"

using namespace std;
using namespace ext;

int main()
{
	setlocale(LC_ALL, "Rus");
	//задание 1

	//Задание №1
	//	int val = 10;
	//	выведите адрес переменной val
	//	создайте указатель для хранения адреса переменной val
	//	сохраните адрес переменной val в созданный указатель
	//	выведите значение переменной val, используя указатель
	//	*/

	//int val = 10;
	//cout << &val << endl;
	//int *ptr = &val;
	//cout << *ptr << endl;

	//	/*Пусть объявлены следующие переменные :*/
//	unsigned int a = 5U;
//	double b = 0.8;
//	const float f = 0.5F;
//	const long long ll = 123LL;
//	/*
//	Объявите и проинициализируйте указатели на вышеобъявленные переменные.
//		Какой размер имеют объявленные указатели ? Проверьте с помощью оператора sizeof
//		С помощью объявленных указателей :
//		увеличьте значение переменной a на 1
//		присвойте переменной b значение 0.25
//		выведите удвоенное значение переменной f
//		выведите посчитайте остатот от деления на 10 переменной ll
//*/
//	unsigned int *ptr = &a;
//	double *ptr2 = &b;
//	const float *ptr3 = &f;
//	const long long *ptr4 = &ll;
//	//размер зависит от разрядности системы. при сборке под х86 получим 4 байта на все указатели
//	*ptr = *ptr + 1U;
//	*ptr2 = 0.25;
//	cout << *ptr3 * 2 << endl;
//	cout << *ptr4 % 10 << endl;



	//задание 2

	//Задание №2
		//int t[4] = { 8,4,2,1 }; //объявление целочисленного массива на 4 элемента
		//int *p1 = t + 2, *p2 = p1 - 1; // объявление двух указателей и их инициализация с помощью базового адреса массива
		////р1 равно 2; р2 = 4
		//p1++; //использование инкримента на указателе, теперь он указывакт на 1
		//cout << *p1 - t[p1 - p2] << endl;	 //вывод элемента, адрес которого равен разности элемента, на который указывает р1
		//// и элемента, который лежит по адресу, равному разности двух указателей

	//int data[] = { 1,2,3,4,5 };
	//	С помощью цикла for и объвленного указателя выведите каждый элемент массива в консоль.
	//	С помощью цикла for и объвленного указателя увеличьте каждый элемент массива в 2 раза
	//	и посчитайте сумму получившихся элементов массива.
	//	Выведите полученный результат.*/
	//int * ptr = data;
	//for (int i = 0; i < 5; i++)
	//{
	//	cout << *(ptr + i) << " ";
	//}
	//cout << "\n";
	//int sum = 0;
	//for (int i = 0; i < 5; i++)
	//{
	//	*(ptr + i) = *(ptr + i) * 2;
	//	sum = sum + *(ptr + i);
	//}
	//cout << sum;



	//задание 3

	//	/*Заданий №3
//		1.	Сгенерировать массив из 20 рандомных элементов из диапазона[-100, 100].
//		2.	Объявите указатель на первый элемент массива.
//		3.	С помощью цикла for и объявленного указателя выведите массив в консоль.
//		4.	Используя дополнительный указатель найдите максимальный элемент массива.
//		5.	Выведите его индекс и значение. (Для вывода индекса использовать арифметику указателей).
//		При обходе массива использовать указатели, запрещено обращаться к элементам массива по индексам.
//*/
//	int arr[20];
//	for (int i = 0; i < 20; i ++)
//	{
//		arr[i] = GetRandomValue(-100, 100, true);
//	}
//	int *ptr = arr;
//	int *max = &arr[0];
//	for (int i = 0; i < 20; i++)
//	{
//		if (*max < arr[i]) { *max = arr[i]; }
//		cout << *(ptr + i) << " ";
//	}
//	cout << "\n";
//	cout << (max - ptr) << " " << *max;
//
//	



	//задание 4

	//	const char data[] = "abcdefghijklmnopqrstuvwxyz";
//	const char * ptr = data;
//	int i = 0;
//	char n;
//	cin >> n;
//
//	while (*ptr != '\0')
//	{
//		if (n == ptr[i]) { break; }
//		i++;
//	}
//	if (i == 0) { cout << -1; }
//	else { cout << i + 1; ; }
//	
//}

	//задание 5
	bool similar = true;
	int i = 0;
	char user_line1[256];
	cin.getline(user_line1, 256);
	char user_line2[256];
	cin.getline(user_line2, 256);
	char * ptr1 = user_line1;
	char * ptr2 = user_line2;
	while (*ptr1 != '\0')
	{
		if (ptr1[i] != ptr2[i]) {
			similar = false;
			break;
		}
		i++;
	}
	if (similar == true) { cout << "равны"; }
	else { cout << "не равны"; }
}
